#include <stdio.h>
#include <signal.h>
#include <stdlib.h>
#include <unistd.h>

void error(char* message){
    perror(message);
    exit(1);
}

void signalHandler(int sig){
    printf("Gracefully exiting server, recieved signal number %d...\n", sig);
    exit(0);
}

int main(int argc, char* argv[]){
    // ensure correct number of command line arguments
    if(argc != 2){
        error("Enter format ./server [PORTNUMBER]\n");
    }

    // exit on Ctrl+C
    signal(SIGINT, signalHandler);

    // set up tcp connection - from Beej's guide
    int sockfd, new_fd;
    struct addrinfo hints, *servinfo, *p;
    struct sockaddr_storage client_addr;
    socklen_t sin_size;
    struct sigaction sa;
    int yes = 1;

    char s[INET6_ADDRSTRLEN];
    int rv;
    memset(&hints, 0, sizeof hints);
    hints.ai_family = AF_UNSPEC;
    hints.ai_socktype = SOCK_STREAM;
    hints.ai_flags = AI_PASSIVE; // use my IP



    while(1){
        printf("running\n");
        sleep(1);
    }

    return 0;

}